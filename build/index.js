"use strict";var t=require("node:crypto"),r=require("bcryptjs");const e="01234567".split("");async function o(r,e,o){const s=await t.webcrypto.subtle.digest("SHA-512",Buffer.from(`${r}${o}${e}`,"utf8"));return Buffer.from(s).toString("base64")}exports.Hasher=class{constructor({secretPepper:t="",workFactor:r=10}={}){this.secretPepper=t,this.workFactor=r}async hash(s){const n=function(){const r=new Uint8Array(1);return t.webcrypto.getRandomValues(r),e[r[0]%e.length]}();return r.hash(await o(s,this.secretPepper,n),this.workFactor)}async compare(t,s){for(const n of function(t){const r=t.slice();for(let t=r.length-1;t>0;t-=1){const e=Math.floor(Math.random()*(t+1)),o=r[t];r[t]=r[e],r[e]=o}return r}(e)){if(await r.compare(await o(t,this.secretPepper,n),s))return!0}return!1}needsRegenerate(t){return r.getRounds(t)<this.workFactor}};
